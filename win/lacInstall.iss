; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "LAC"
#define MyAppVersion "0.0.9"
#define MyAppPublisher "Stefano Pompa"
#define MyAppURL "https://github.com/steledama/lac"
#define MyAppExeName "lacStart.cmd"
#define NODE "{code:GetNODE}"
#define USERPROFILE "C:\Users\stefano"



[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{CCBF0BED-21E8-435A-8525-FA5B656072DA}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName=C:\{#MyAppName}
; not let user chose install directory
DisableDirPage=yes
; If this is set to yes, Setup will not show the Select Start Menu Folder wizard page.
DisableProgramGroupPage=yes
; Uncomment the following line to run in non administrative install mode (install for current user only.)
;PrivilegesRequired=lowest
; Where the installer wil be produced
OutputDir={#USERPROFILE}\Desktop
OutputBaseFilename={#MyAppName}_setup
Compression=lzma
SolidCompression=yes
WizardStyle=modern
ArchitecturesInstallIn64BitMode=x64

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"
Name: "italian"; MessagesFile: "compiler:Languages\Italian.isl"

[Files]
Source: "{#USERPROFILE}\Documents\GitHub\lac\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs; Excludes: "\.next,\node_modules"; AfterInstall: nodeModules
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
; Name: "{group}\{#MyAppName}"; Filename: "{app}\win\{#MyAppExeName}"; IconFilename: "{app}\win\lac.ico"
Name: "{group}\{#MyAppName}"; Filename: "http://localhost:3000"; IconFilename: "{app}\win\lac.ico"

[Run]
; Install Node based on x86 or x64 architecture
;Filename: "{sys}\msiexec.exe"; Parameters: "/passive /i ""{app}\win\{#NODE}"""; Flags: waituntilterminated; AfterInstall: nodeModules

; Create scheduled task for monitoring every 4 hour
Filename: "powershell.exe"; \
  Parameters: "-ExecutionPolicy Bypass -File ""{app}\win\createTask.ps1"""; \
  WorkingDir: {app}; Flags: waituntilterminated; AfterInstall: nodeModules

; Add Firewall Rules
Filename: "{sys}\netsh.exe"; Parameters: "advfirewall firewall add rule name=""LAC"" program=""{app}\zabbix_sender.exe"" dir=out action=allow enable=yes"; Flags: runhidden; AfterInstall: lacService
Filename: "{sys}\netsh.exe"; Parameters: "advfirewall firewall add rule name=""Nodejs In"" program=""{commonpf}\nodejs\node.exe"" dir=in action=allow enable=yes"; Flags: runhidden
Filename: "{sys}\netsh.exe"; Parameters: "advfirewall firewall add rule name=""Nodejs Out"" program=""{commonpf}\nodejs\node.exe"" dir=out action=allow enable=yes"; Flags: runhidden

;Postinstall launch lac.cmd (browser with localhost:3000)
Filename: "{app}\win\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: shellexec postinstall skipifsilent

[UninstallRun]
; Uninstall Node
;Filename: "{sys}\msiexec.exe"; Parameters: "/passive /x ""{app}\win\{#NODE}""";

; Delete scheduled task
Filename: "powershell.exe"; \
  Parameters: "-ExecutionPolicy Bypass -File ""{app}\win\deleteTask.ps1"""; \
  WorkingDir: {app}; Flags: runhidden

; Remove Firewall Rules
Filename: "{sys}\netsh.exe"; Parameters: "advfirewall firewall delete rule name=""LAC"" program=""{app}\zabbix_sender.exe"""; Flags: runhidden;
Filename: "{sys}\netsh.exe"; Parameters: "advfirewall firewall delete rule name=""NodeJS In"" program=""{commonpf}\nodejs\node.exe"""; Flags: runhidden
Filename: "{sys}\netsh.exe"; Parameters: "advfirewall firewall delete rule name=""NodeJS Out"" program=""{commonpf}\nodejs\node.exe"""; Flags: runhidden

; Remove all leftovers files on C:\LAC folder
Filename: "{sys}\rmdir"; Parameters: "-r ""{app}""";

[Code]
function GetNODE(Param: string): string;
begin
  if IsWin64 then Result := 'node-v16.13.0-x64.msi'
    else Result := 'node-v16.13.0-x86.msi';
end;

procedure nodeModules();
var
  ErrorCode: Integer;
var
  C, P, D: String;
begin
  C := 'npm';
  P := 'install';
  D := ExpandConstant('{app}');
  if not ShellExec('', C, P, D, SW_HIDE, ewWaitUntilTerminated, ErrorCode) then 
  begin
    ErrorCode:= 1;
    MsgBox('Issue occured downloading node modules',
      mbInformation, MB_OK);
  end;
end;

procedure buildNext();
var
  ErrorCode: Integer;
var
  C, P, P2, D: String;
begin
  C := 'npm';
  P := 'run build';
  D := ExpandConstant('{app}');
  if not ShellExec('', C, P, D, SW_HIDE, ewWaitUntilTerminated, ErrorCode) then 
  begin
    ErrorCode:= 1;
    MsgBox('Issue occured building next app',
      mbInformation, MB_OK);
  end;
end;

procedure lacService();
var
  ErrorCode: Integer;
var
  C, P, D: String;
begin
  C := 'node';
  P := 'serviceInstall.js';
  D := ExpandConstant('{app}');
  if not ShellExec('', C, P, D, SW_HIDE, ewWaitUntilTerminated, ErrorCode) then 
  begin
    ErrorCode:= 1;
    MsgBox('Issue occured with installing application as a service',
      mbInformation, MB_OK);
  end;
end;