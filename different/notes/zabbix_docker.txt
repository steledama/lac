installare ubuntu con docker (e kubernetes)

CONDIVISA
sudo apt-get install cifs-utils

per creare la directory dove verranno montati i dischi esterni
sudo mkdir /mnt/outside

comando
sudo mount -t cifs -o _netdev,username=stefano,password=pomodoro,uid=1000,gid=1000  //192.168.1.109/scan /mnt/outside
sudo mount -t cifs -o _netdev,username=stefano,password=pomodoro,uid=1000,gid=1000  //192.168.1.116/Xerox/LAC_backup /mnt/outside

per montare i dischi in automatico
sudo nano /etc/fstab
//192.168.1.109/scan    /mnt/outside    cifs    uid=1000,gid=1000,user=stefano,password=pomodoro,_netdev 0 0
//192.168.1.116/Xerox/LAC_backup    /mnt/outside    cifs    uid=1000,gid=1000,user=stefano,password=pomodoro,_netdev 0 0

DOCKER COMPOSE
scaricare da git i files:
Zabbix Docker Github: https://github.com/zabbix/zabbix-docker
editare il file .yaml toglienedo i servizi che non vogliamo
copiamo nella directory corrente
cp -r /mnt/outside/zabbix-docker-4.2/ .
entrere sulla directory
cd zabbix zabbix-docker-4.2

far partire lo stack
sudo docker-compose -f zabbix.yaml up -d

cercare id del container dell'agent
sudo docker ps

poi ispezionare il container dell'agent per scoprire l'ip e metterlo nel front end
sudo docker inspect <id>

per dare un comando ad un container
sudo docker exec -it <id> COMANDO es. zabbix_server -R config_cache_reload
sudo docker exec -it <id> /bin/bash pere entrare nella cli dentro il container (exit per uscire)

far rimuovere tutti i container dello stack
sudo docker-compose -f zabbix.yaml kill

far rimuovere tutti i container dello stack con le immeggini, volumi, ecc
sudo docker-compose -f zabbix.yaml down

per vedere i log
sudo docker logs <id>

nella cartella env abbiamo i parametri di configurazione dei vari servizi
cambiare un parametro poi riavviare il servizio
sudo docker-compose SERVIZIO

per creare e attivare i container
sudo docker run -d --name zabbix -p 80:80 -p 10051:10051 zabbix/zabbix-appliance

Detached (-d) e foreground
To start a container in detached mode, you use -d=true or just -d option
to run the container in the background in a “detached” mode
In foreground mode (the default when -d is not specified), docker run can start the process in the container and attach the console to the process’s standard input, output, and standard error. For interactive processes (like a shell), you must use -i -t together in order to allocate a tty for the container process. -i -t is often written -it

per far partire un container con un volume interno (se non c'è viene creato)
sudo docker run -d --name zabbix -p 80:80 -p 10051:10051 --mount source=my-vol,target=/app zabbix/zabbix-appliance

per far partire un container con un bind volume (se non c'è viene creato)
When you use a bind mount, a file or directory on the host machine is mounted into a container. The file or directory is referenced by its full or relative path on the host machine.
Use the following command to bind-mount the target/ directory into your container at /app/ The $(pwd) sub-command expands to the current working directory on Linux or macOS hosts. Es. source=$(pwd)/target,target=/app
sudo docker run -d -it --name zabbix -p 80:80 -p 10051:10051 --mount type=bind,source=/mnt/stele,target=/stele zabbix/zabbix-appliance
sudo docker run -d -it --name zabbix -p 80:80 -p 10051:10051 --mount type=bind,source=$(pwd)/stele,target=/stele zabbix/zabbix-appliance
  
per vedere la lista dei container
sudo docker container ls

per stoppare, avviare e riavviare un container
sudo docker stop zabbix
sudo docker start zabbix
sudo docker restart zabbix

per 'entrare' nel container con la shell (mentre il container è attivo)
sudo docker exec -it zabbix bash
per uscire
exit

Per ispezionare un container
sudo docker inspect zabbix

per cancellare il container:
sudo docker stop zabbix
sudo docker rm zabbix

ma non cancelliamo i volumi che sono persistenti! per vedere la lista dei volumi
sudo docker volume ls

Per creare un volume
docker volume create my-vol

per ispezionare il volume my-vol
docker volume inspect my-vol

per rimuovere un volume
docker volume rm my-vol

To remove all unused volumes and free up space:
sudo docker volume prune

per copiare un file da host a container
sudo docker cp foo.txt mycontainer:/foo.txt

per copiare un file da container ad host
sudo docker cp mycontainer:/foo.txt foo.txt

Data can be transferred to a different server by transferring the database
[Perform below steps on the Server to be transferred]
1.Stop the Zabbix server
Ubuntu
service zabbix-server stop
CentOS
systemctl stop zabbix-server
2.Backup of database
mysqldump -uroot -p<password> --database <Db_name> > <backup_name>.sql

[Perform below steps on the Server where database to be transferred(Destination Server)]
Pre-requisite: Zabbix set up is already complete
　1.Stop Zabbix Server
Ubuntu:-
service zabbix-server stop
CentOS:-
systemctl stop zabbix-server
　2.Delete Zabbix database
DROP DATABASE <Db_name>
　3.Create Zabbix database
CREATE DATABASE <Db_name>
　4.Restore the obtained backup
mysql -u username -p database_name < backup_name.sql
　5.Start Zabbix Server
Ubuntu:-
service zabbix-server start
CentOS:-
systemctl start zabbix-server

[Host to be monitored]
　1.Stop Zabbix agent
Ubuntu:-
service zabbix-agentd stop
CentOS:-
systemctl stop zabbix-agentd
　2. Change IP address of Zabbix Server in the configuration file of ZabbixAgent
　　File：/etc/zabbix/zabbix_agentd.conf
　　Changed location：Server=<NEW_SERVER_IP>
　　　　　　　ServerActive=<NEW_SERVER_IP>
　3.Start Zabbix Agent
Ubuntu:-
service zabbix-agentd start
CentOS:-
systemctl start zabbix-agentd